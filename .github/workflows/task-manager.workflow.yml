name: Backend CI (task-manager-backend)

# Run only when backend or backend docker config changes
on:
  push:
    paths:
      - "task-manager/task-manager-backend/**"
      - "task-manager/docker/backend/**"
      - "task-manager/docker-compose.yml"
  pull_request:
    paths:
      - "task-manager/task-manager-backend/**"
      - "task-manager/docker/backend/**"
      - "task-manager/docker-compose.yml"

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build backend image & run tests
    runs-on: ubuntu-latest

    # Make JWT_SECRET available to steps (must be configured in repository secrets)
    env:
      COMPOSE_PROJECT_NAME: task-manager-ci
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fail fast if JWT_SECRET missing
        # Clear, early failure instead of cryptic runtime errors
        run: |
          if [ -z "${JWT_SECRET:-}" ]; then
            echo "::error::JWT_SECRET secret is not provided. Add it at Settings → Secrets and variables → Actions."
            exit 1
          else
            echo "JWT_SECRET present (masked)."
          fi

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Ensure Docker CLI and Compose available
        run: |
          docker version
          docker compose version

      - name: Build backend image (compose)
        working-directory: task-manager
        run: |
          set -euo pipefail
          echo "Building backend image..."
          DOCKER_BUILDKIT=1 docker compose build --progress=plain backend

      - name: Run tests (compose-run with JWT_SECRET passed into container)
        working-directory: task-manager
        run: |
          set -euo pipefail
          echo "Running tests in a one-off container; explicitly passing JWT_SECRET into the container..."
          docker compose run --rm --no-deps \
            -e JWT_SECRET="${JWT_SECRET}" \
            backend uv run pytest .

      - name: Tear down docker-compose resources
        if: always()
        working-directory: task-manager
        run: |
          set -euo pipefail
          docker compose down --volumes --remove-orphans
